# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import dr_evaluation_pb2 as dr__evaluation__pb2


class DREvaluationStub(object):
  """RPC definition.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetDREvaluation = channel.unary_unary(
        '/dr_evaluation.DREvaluation/GetDREvaluation',
        request_serializer=dr__evaluation__pb2.Request.SerializeToString,
        response_deserializer=dr__evaluation__pb2.Reply.FromString,
        )


class DREvaluationServicer(object):
  """RPC definition.
  """

  def GetDREvaluation(self, request, context):
    """A simple RPC.
    An error is returned if there is no meter data for the given request.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_DREvaluationServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetDREvaluation': grpc.unary_unary_rpc_method_handler(
          servicer.GetDREvaluation,
          request_deserializer=dr__evaluation__pb2.Request.FromString,
          response_serializer=dr__evaluation__pb2.Reply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'dr_evaluation.DREvaluation', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
